---

- block:
    - name: create local fonts directory
      ansible.builtin.file:
        path: "~{{ local_username }}/.local/share/fonts"
        state: directory
  become: true
  become_user: "{{ local_username }}"

- block:
    - name: download nerd fonts to local fonts folder
      ansible.builtin.get_url:
        url: "{{ item  }}"
        dest: "~{{ local_username }}/.local/share/fonts/"
      with_items: "{{ terminal_customizations_nerd_fonts }}"
  become: true
  become_user: "{{ local_username }}"

- name: refresh fonts cache
  ansible.builtin.shell: "fc-cache -fv"
  become: true
  become_user: "{{ local_username }}"

# fix for https://github.com/gnunn1/tilix/wiki/VTE-Configuration-Issue using option 2
# also, set font to SourceCodePro+Powerline+Awesome Regular for tmux powerline
- block:
    - name: copy tilix config template
      ansible.builtin.copy:
        src: tilix.dconf
        dest: /tmp/tilix.dconf
        force: true

    - name: import modified tilix config
      ansible.builtin.shell: dconf load /com/gexperts/Tilix/ < /tmp/tilix.dconf
      ignore_errors: true
  become: true
  become_user: "{{ local_username  }}"

- block:
    - name: Create alacritty config directory
      ansible.builtin.file:
        path: "~{{ local_username }}/.config/alacritty"
        state: directory
        mode: '0755'
        owner: "{{ local_username }}"
        group: "{{ local_username }}"

    - name: Clone alacritty themes git repo
      ansible.builtin.git:
        repo: "{{ terminal_customizations_alacritty_themes_repo }}"
        dest: "~{{ local_username }}/.config/alacritty/themes"
        clone: true

    - name: Copy sample alacritty config file
      ansible.builtin.copy:
        src: alacritty.toml
        dest: "~{{ local_username }}/.config/alacritty/alacritty.toml"
        mode: '0644'
  become: true
  become_user: "{{ local_username }}"

# setup tmux configs and plugins
- block:
    - name: git clone tmux plugin repo
      ansible.builtin.git:
        repo: "{{ terminal_customizations_tmux_plugin_repo }}"
        dest: "~{{ local_username }}/.tmux/plugins/tpm"
        clone: true
        version: master

    - name: check if .tmux.conf exists in user's home dir
      ansible.builtin.stat:
        path: "~{{ local_username }}/.tmux.conf"
      register: dottmuxdotconf

    - name: backup .tmux.conf if it exists
      ansible.builtin.copy:
        src: "~{{ local_username }}/.tmux.conf"
        dest: "~{{ local_username }}/.tmux.conf.orig"
      when: dottmuxdotconf.stat.exists

    - name: copy the sample .tmux.conf file
      ansible.builtin.copy:
        src: .tmux.conf
        dest: "~{{ local_username }}/.tmux.conf"
        force: true

    - name: install all required tmux plugins
      ansible.builtin.shell: "~{{local_username}}/.tmux/plugins/tpm/scripts/install_plugins.sh"
      become: true
      become_user: "{{ local_username }}"
  become: true
  become_user: "{{ local_username }}"

...
