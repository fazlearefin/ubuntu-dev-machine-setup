#!/bin/bash

function upgrade_system_packages {
    /usr/bin/sudo nala clean
    /usr/bin/sudo nala upgrade -y \
        && /usr/bin/sudo nala autopurge -y \
        && /usr/bin/sudo nala clean
}

# a locked-down firefox instance running inside a sandbox
function safefox {
    /usr/bin/firejail --name=safe-firefox --apparmor --seccomp --private --private-dev --private-tmp --protocol=inet firefox --new-instance --no-remote --safe-mode --private-window $1
}

# update existing vagrant boxes
function update_vagrant_boxes {
    # Find all boxes which have updates
    AVAILABLE_UPDATES=$(vagrant box outdated --global | awk '/outdated/{print $2}' 2>/dev/null | tr -d \')

    if [ -n "$AVAILABLE_UPDATES" ]; then
        echo 'Updating Vagrant boxes...'

        # Loop through each box with an available update
        for box in $AVAILABLE_UPDATES; do
            echo "Found an update for $box"

            # Add latest version for each provider
            vagrant box add --clean "$box" --provider "$(vagrant box list | grep $box | awk -F '[()]' '{split($2,a,","); print a[1]}')"
        done

        echo 'All boxes are now up to date! Pruning...'

        # Remove all old versions
        vagrant box prune -f
    else
        echo 'All boxes are already up to date!'
    fi

    # Display the global box outdated status
    vagrant box outdated --global
}

# update existing docker images
function update_docker_images {
    docker images --format "{{.Repository}}:{{.Tag}}" | grep -v "<none>" | sort -u | xargs -L1 docker pull
    # cleanup images containing no tags; usually the ones which get updated
    if nonetags=$(docker images | grep "<none>"); then awk '{ print $3 }' <<< "$nonetags" | xargs -L1 docker rmi -f; fi
}

### BEGIN night light control ###
function night_light_enable {
    gsettings set org.gnome.settings-daemon.plugins.color night-light-enabled true
    gsettings set org.gnome.settings-daemon.plugins.color night-light-temperature 4700
}

function night_light_disable {
    gsettings set org.gnome.settings-daemon.plugins.color night-light-enabled false
}

function night_light_low {
    gsettings set org.gnome.settings-daemon.plugins.color night-light-enabled true
    gsettings set org.gnome.settings-daemon.plugins.color night-light-temperature 4700
}

function night_light_medium {
    gsettings set org.gnome.settings-daemon.plugins.color night-light-enabled true
    gsettings set org.gnome.settings-daemon.plugins.color night-light-temperature 4200
}

function night_light_high {
    gsettings set org.gnome.settings-daemon.plugins.color night-light-enabled true
    gsettings set org.gnome.settings-daemon.plugins.color night-light-temperature 3700
}
### END night light control ###
